class JubiHint {
  static get HINT_HEIGHT() { return 50; }
  static get HINT_WIDTH() { return 50; }

  static get FONT_SIZE() { return 30; }

  constructor(pen, hint, pos) {
    if (this.constructor == JubiHint) {
      throw new TypeError("JubiArrow is an abstract class");
    }

    this.pen = pen;
    this.hint = hint;
    this.pos = pos;

    this.pen.font = JubiHint.FONT_SIZE + 'px Arial';

    this.drawUnsolved();
  }

  drawUnsolved() {
    throw new TypeError("drawUnsolved is a virtual function");
  }
}

class JubiRowHint extends JubiHint {
  drawUnsolved() {
    if (this.hint) {
      this.pen.textBaseline = 'bottom';
      this.pen.textAlign = 'right';
      var text = this.hint.constructor == Array ?
        this.hint.join(" ") :
        '[' + this.hint.toString() + ']';
      this.pen.fillText(
        text,
        JubiHint.HINT_WIDTH,
        this.pos + JubiHint.FONT_SIZE / 2
      );
    }
  }
}