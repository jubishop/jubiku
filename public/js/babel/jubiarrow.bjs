class JubiArrow {
  static get ARROW_HEIGHT() { return 20; }
  static get ARROW_WIDTH() { return 40; }

  static get ARROW_COLOR() { return 'blue'; }

  constructor(pen) {
    if (new.target === JubiArrow) {
      throw new TypeError("JubiArrow is an abstract class");
    }

    this.pen = pen;
  }

  _clearArrow() {
    throw new TypeError("_clearArrow is a virtual function");
  }
  clearArrow() {
    if (this.pos) {
      this._clearArrow();
    }
    this.pos = false;
  }

  _drawArrow() {
    throw new TypeError("_drawArrow is a virtual function");
  }
  drawArrow(pos) {
    this.clearArrow();

    this.pos = pos;
    this._drawArrow();

    this.pen.fillStyle = JubiArrow.ARROW_COLOR;
    this.pen.fill();
  }
}

class JubiColumnArrow extends JubiArrow {
  _clearArrow() {
    this.pen.clearRect(
      this.pos - JubiArrow.ARROW_WIDTH / 2 - 1,
      -1,
      JubiArrow.ARROW_WIDTH + 2,
      JubiArrow.ARROW_HEIGHT + 2
    );
  }

  _drawArrow() {
    this.pen.beginPath();
    this.pen.moveTo(this.pos, 0);
    this.pen.lineTo(
      this.pos - JubiArrow.ARROW_WIDTH / 2,
      JubiArrow.ARROW_HEIGHT
    );
    this.pen.lineTo(
      this.pos + JubiArrow.ARROW_WIDTH / 2,
      JubiArrow.ARROW_HEIGHT
    );
    this.pen.closePath();
  }
}

class JubiRowArrow extends JubiArrow {
  _clearArrow() {
    this.pen.clearRect(
      -1,
      this.pos - JubiArrow.ARROW_WIDTH / 2 - 1,
      JubiArrow.ARROW_HEIGHT + 2,
      JubiArrow.ARROW_WIDTH + 2
    );
  }

  _drawArrow() {
    this.pen.beginPath();
    this.pen.moveTo(0, this.pos);
    this.pen.lineTo(
      JubiArrow.ARROW_HEIGHT,
      this.pos - JubiArrow.ARROW_WIDTH / 2
    );
    this.pen.lineTo(
      JubiArrow.ARROW_HEIGHT, 
      this.pos + JubiArrow.ARROW_WIDTH / 2
    );
    this.pen.closePath();
  }
}